<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/author/Anwar/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2020-06-15T21:06:33+02:00</updated>
  <id>http://localhost:4000/author/Anwar/feed.xml</id>

  
  
  

  
    <title type="html">Anwar El-Wakil | </title>
  

  
    <subtitle>A JOURNEY THROUGH MY THOUGHTS</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Should a developer be trusted?</title>
      <link href="http://localhost:4000/Trust-Developers" rel="alternate" type="text/html" title="Should a developer be trusted?" />
      <published>2020-06-13T12:18:00+02:00</published>
      <updated>2020-06-13T12:18:00+02:00</updated>
      <id>http://localhost:4000/Trust%20Developers</id>
      <content type="html" xml:base="http://localhost:4000/Trust-Developers">&lt;p&gt;As a software quality control engineer should you trust a developer? Short answer, Yes! Now let us dig deeper into why trusting developers could lead to higher quality and faster delivery.&lt;/p&gt;

&lt;p&gt;A developer is a craftsman a skilled individual driven by passion. Most developers enjoy what they do for a living. To the extent that a lot of developers choose coding as their secondary hobby in their free time. They are proud of what they develop and set high-quality standards for their work. Nothing feels better than releasing new code that works well and meets the expectations of the user. The user here could be the customer, another software, or the developer who developed the code themselves. This is important to realize. This sets the intention of the developer as someone who wants to produce high-quality results.&lt;/p&gt;

&lt;p&gt;A quality control engineer’s main goal is to emphasize on producing high-quality results within a defined delivery timeline. This means that the developer’s and the QC’s intentions are aligned. Let’s get back to the main question “Should a developer be trusted?”. From my own experience trusting the developer is an essential tool for capitalizing on the well-formed intention of a skilled developer.&lt;/p&gt;

&lt;p&gt;A policed process and mistrust results in loss of passion for both sides. Passion is a crucial ingredient for quality. Our role as QC is not to police the developed work or be an indicator of the developer’s efficiency and level of performance. Our role is more of a support function. We are there to support the developer to deliver better results. The QC member is on the developers’ side and not on an opposing side. Together the developer and the QC share the same goal to deliver high-quality software on time. The intentions and motivation to do so is equal.&lt;/p&gt;

&lt;p&gt;What can you do as a QC member to capitalize on this mindset? Well, relax, a relaxed environment with less sense of urgency helps reduce panic. Panic never benefited quality. Be curious and develop questions early on. Remember your role is to support the developer. Your curiosity is needed to open up the horizon in front of the developer before they write a single line of code. Ask questions and dive into technical discussions to find answers and eradicate ambiguity. Unanswered questions and ambiguity are the main sources of issues and low quality. Trusting the developer to open up and take part in the discussions with pure intentions adds great clarity and transparency. Use this transparency to develop better questions and finding answers. You will know that you have achieved your goal when you have no more questions to ask and that the work that needs to be done now seems simple to implement.&lt;/p&gt;

&lt;p&gt;Leave plenty of space for creativity within an acceptable risk factor. Let’s agree that if we do not want the loss of quality the best thing we can do is stop developing altogether. Yet, the main goal is to keep developing with a lot of passion. Be open and flexible to new ideas and give the developer the space to be creative. Again our role is to support the developer to code with confidence. We are successful in our role when the developer is free of constraint and can do what they do best. Deliver Quality Code.&lt;/p&gt;

&lt;p&gt;Accept that there is a risk with change and work on reducing the risk by understanding the change and asking more questions. Next time you are on a project team up with the developer and use trust, curiosity, and questions to achieve your goal.&lt;/p&gt;

&lt;p&gt;I post these articles when they are still the first draft. I will be improving it and developing my ideas further. Please share with me your ideas and questions. This will help me with improving my content and sharing more from my experience. ♥️&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Anwar El-Wakil</name>
        
        
      </author>

      

      
        <category term="thought-stream" />
      

      
        <summary type="html">As a software quality control engineer should you trust a developer? Short answer, Yes! Now let us dig deeper into why trusting developers could lead to higher quality and faster delivery.</summary>
      

      
      
    </entry>
  
</feed>
